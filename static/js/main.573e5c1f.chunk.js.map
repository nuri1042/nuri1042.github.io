{"version":3,"sources":["logo.svg","data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Box","styled","div","Title","h4","props","color","Stock","stock","Detail","shoes","setStock","navigate","useNavigate","useParams","findId","find","useState","alert","setAlert","useEffect","timer","setTimeout","console","log","clearTimeout","className","src","width","onClick","prev","ItemList","i","JumboTron","variant","map","arr","App","Data","setShoes","load","setLoad","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","path","element","class","axios","get","then","result","data","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.573e5c1f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default [\n  {\n    id: 0,\n    title: 'White and Black',\n    content: 'Born in France',\n    price: 120000,\n  },\n  {\n    id: 1,\n    title: 'Red Knit',\n    content: 'Born in Seoul',\n    price: 110000,\n  },\n  {\n    id: 2,\n    title: 'Grey Yordan',\n    content: 'Born in the States',\n    price: 130000,\n  },\n];\n","import axios from 'axios';\nimport { React, useEffect, useRef, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Datail.scss';\n\n// styled component 생성하기\n// 컴포넌트에 직접 스타일 넣어서 스타일링하기\n// CSS 를 미리 입혀놓은 컴포넌트\nlet Box = styled.div``;\nlet Title = styled.h4`\n  font-size: 25px;\n  color: ${(props) => props.color};\n`;\n\nfunction Detail({ shoes, stock, setStock }) {\n  let navigate = useNavigate();\n  let { id } = useParams();\n  let findId = shoes.find((shoes) => {\n    return shoes.id == id;\n  });\n  let [alert, setAlert] = useState(true);\n\n  // useEffect 훅\n  // 컴포넌트가 mount 되었을 때, update 되었을 때 특정 코드를 실행할 수 있음\n  // useEffect 가 여러개인 경우 순서대로 실행\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setAlert(false);\n    }, 2000);\n    console.log('useEffect');\n    // 컴포넌트가 사라질 때 (unMount 될 때)코드 실행시키려면 return 안에 적어줌\n    // return ()=>{code...}\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [alert]);\n\n  return (\n    <>\n      <div className='container'>\n        <Box>\n          <Title className='red'>Detail</Title>\n        </Box>\n\n        {alert ? (\n          <div className='my-alert'>\n            <p>재고가 얼마 남지 않았습니다.</p>\n          </div>\n        ) : null}\n\n        <div className='row'>\n          <div className='col-md-6'>\n            <img src={`https://codingapple1.github.io/shop/shoes1.jpg`} width='100%' />\n          </div>\n          <div className='col-md-6 mt-4'>\n            <h4 className='pt-5'>{findId.title}</h4>\n            <p>{findId.content}</p>\n            <p>{findId.price}</p>\n            <Stock stock={stock} />\n            <button\n              className='btn btn-danger'\n              onClick={() => {\n                setStock((prev) => prev - 1);\n              }}\n            >\n              주문하기\n            </button>\n            <button\n              className='btn btn-danger'\n              onClick={() => {\n                navigate(-1);\n              }}\n            >\n              뒤로가기\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst Stock = ({ stock }) => {\n  return (\n    <>\n      <p>재고 : {stock[0]}</p>\n    </>\n  );\n};\nexport default Detail;\n","import { React, useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\nimport Detail from './Detail.js';\nimport axios from 'axios';\n\nimport { Link, Route, Routes, Switch } from 'react-router-dom';\n\nfunction ItemList(props) {\n  return (\n    <div className='col-md-4'>\n      <img src={`https://codingapple1.github.io/shop/shoes${props.i + 1}.jpg`} width='100%' />\n      <h4>{props.shoes.title}</h4>\n      <h6>{props.shoes.content}</h6>\n      <p>{props.shoes.price}</p>\n    </div>\n  );\n}\nfunction JumboTron(props) {\n  return (\n    <>\n      <div className='jumbotron'>\n        <h1>30% Season Off</h1>\n        <p>This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\n        <p>\n          <button variant='primary'>Learn more</button>\n        </p>\n      </div>\n\n      <div className='container'>\n        <div className='row'>\n          {props.shoes.map((arr, i) => {\n            return <ItemList shoes={props.shoes[i]} i={i} key={i} />;\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction App() {\n  let [shoes, setShoes] = useState(Data);\n  let [load, setLoad] = useState(false);\n  let [stock, setStock] = useState([10, 11, 12]);\n\n  return (\n    <div className='App'>\n      <Navbar bg='light' expand='lg'>\n        <Container>\n          <Navbar.Brand href='#home'>Nuri Shop</Navbar.Brand>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='me-auto'>\n              <Nav.Link as={Link} to='/'>\n                Home\n              </Nav.Link>\n              <Nav.Link as={Link} to='/detail'>\n                Detail\n              </Nav.Link>\n              <NavDropdown title='Dropdown' id='basic-nav-dropdown'>\n                <NavDropdown.Item href='#action/3.1'>Action</NavDropdown.Item>\n                <NavDropdown.Item href='#action/3.2'>Another action</NavDropdown.Item>\n                <NavDropdown.Item href='#action/3.3'>Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href='#action/3.4'>Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <Routes>\n        <Route path='/' element={<JumboTron shoes={shoes} />}></Route>\n        <Route path='/detail/:id' element={<Detail shoes={shoes} stock={stock} setStock={setStock} />}></Route>\n      </Routes>\n      <button\n        class='btn btn-primary'\n        onClick={() => {\n          // 로딩중... 구현\n          setLoad(true);\n          // ajax 를 사용해 새로고침 없이 데이터 가져옴\n          // 성공하면 then\n          // 실패하면 catch\n\n          // axios 를 사용하면 JSON 데이터를 받아와서 객체로 알아서 변경해줌\n\n          axios\n            .get('https://codingapple1.github.io/shop/data2.json')\n            .then((result) => {\n              setTimeout(() => {\n                setShoes([...shoes, ...result.data]);\n                setLoad(false);\n              }, 2000);\n            })\n            .catch(() => {\n              console.log('ajax failed');\n            });\n        }}\n      >\n        더보기\n      </button>\n      {load ? <p>Loading...</p> : null}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}